export const Project = [
    {"_id":{"$oid":"6448b44a935faaf97896fe8d"},"title":"Gran Eterno Website","description":"Gran Eterno website is an Enterprise Resource Planning (<b>ERP</b>) system that was created by OMNI IT Consulting using <b>Laravel</b> and <b>MySQL</b>. As a Back End Developer in OMNI IT Consulting, I continued to build the website by adding and improving several features. This ERP system consists of several menus, namely inventory master, purchasing master, sales master, inventory module, production module, purchasing module, sales module, and finance module. Each menu has several submenus that are interrelated in managing the OMNI IT Consulting business plan.","image_path":"/projects/GranEterno.png","link":"https://graneterno.omni.gg","sequence":{"$numberInt":"20"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"6447ffad935faaf97896fe7a"},"title":"3D WebGL Articulated Model","description":"Users can create and interact with the <b>canvas</b> using various tools available on the right side of the canvas. To determine the components to be modified, users can choose themselves through the tree that has been provided. There are translation tools, rotation tools, and scaling tools that can assist users in making changes to articulated objects. Users can import the desired articulated object via the load button. The imported model is a .json file and has the attributes name, vertices, colors, faces, animation, and children in it. After the imported object is modified, the user can save via the save button so that the articulated object can be reloaded in the condition after the modification. Meanwhile, there is also a reset button which, when clicked, all modified objects will return to their default state, namely the state of the object when it was first loaded. In addition to the features mentioned, users can also play animations contained in the model, change the camera position, change the projection mode, change the type of mapping, and add a new default cube.","image_path":"/projects/WebGL.png","link":"https://github.com/WillyWilsen/IF3260_Tugas3_K03_G12","sequence":{"$numberInt":"19"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"6447d7bd935faaf97896fe74"},"title":"VMall Website","description":"VMall website is a virtual mall project that was created by PT Halo Industri Digital using <b>CodeIgniter</b> and <b>MySQL</b>. As a Back End Developer in PT Halo Industri Digital, I continued to build the website by adding and fixing some features. Each user account has only one shop that is part of a shop group. Users can manage their profile, products, and product variants. Users can also manage shelf position and entry position of their shop that will be displayed in the Unity poject as a virtual mall UI. Every transaction that occurs in the shop will be recorded in the activity menu.","image_path":"/projects/VMall.png","link":"","sequence":{"$numberInt":"18"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"6446f3ae935faaf97896fe58"},"title":"Extended Survival Shooter","description":"Extended Survival Shooter is a desktop game developed using <b>C#</b> (<b>Unity</b>). This game has several features, namely story, quest, save game, gameover, scoreboard, main menu, shopkeeper, weapon (default, shotgun, sword, bow), pet (healer, attacker, aura buff), and cheat (no damage, 1 hit kill, motherlode, x2 speed, full HP pet, kill pet).","image_path":"/projects/ESS.png","link":"https://gitlab.informatika.org/JeremyRio/if3210-2023-unity-ess","sequence":{"$numberInt":"17"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"6446f1a9935faaf97896fe53"},"title":"Majika","description":"Majika is a mobile application created using <b>Kotlin</b> (<b>Android Studio</b>). Majika application has several features, namely the twibbon feature, restaurant branches, menus, baskets, and payments. Twibbon feature allows users to take selfies that are already installed with the twibbon in the application. Restaurant branch feature allows users to view a list of restaurants in the application and open the location of the restaurant branch on Google Maps. Menu and basket features allow users to view the food or drink menu in the application and then enter the food or drink menu into the basket. Finally, payment feature allows users to pay for food or drinks in the basket.","image_path":"/projects/Majika.jpg","link":"https://gitlab.informatika.org/if3210-2023-android-mlk/malika","sequence":{"$numberInt":"16"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"639ef6ae296bbe6bd7b76101"},"title":"Binotify Website V2","description":"<b>1) Binotify Website</b> (<b>CodeIgniter</b> and <b>MySQL</b>).<br> Addition: User can subscribe to singers who have registered for Binotify Premium Website and listen to songs from singers who have been subscribed.<br><b>2) Binotify Premium Website</b> (<b>ReactJS + ViteJS</b>).<br> Users are divided into admin and singer. Admin can accept or reject subscription requests obtained from Binotify Website. Singer can add, delete, change and view song details.<br><b>3) Binotify REST Service</b> (<b>NestJS</b> and <b>MySQL</b>).<br> Services: Perform user authentication, provide an endpoint for singers on Binotify Premium Website so they can add, modify, delete, and view song details, and provide an endpoint for viewing singer lists and lists of singer songs.<br><b>4) Binotify SOAP Service</b> (<b>JAX-WS</b> and <b>MySQL</b>).<br> Services: Maintain the security of Binotify Website, receive subscription requests from Binotify Website, send callbacks for acceptance/rejection of subscription requests to Binotify Website, and provide an endpoint for checking request status.","image_path":"/projects/BinotifyV2.jpg","link":"https://gitlab.informatika.org/if3110-2022-k01-02-10","sequence":{"$numberInt":"15"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"639e3291296bbe6bd7b760bc"},"title":"Binotify Website","description":"Binotify website is created using <b>CodeIgniter</b> with some modified configurations and <b>MySQL</b>. The website contains albums and songs that users can listen to. Users are divided into user and admin. User can view album lists and details, view song details, search for songs, and listen to songs. Admin can do things that users do with additions such as deleting and adding albums, removing and adding songs, and viewing a list of existing users.","image_path":"/projects/Binotify.png","link":"http://binotify.epizy.com/public/","sequence":{"$numberInt":"14"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"631a1568a2b7ef0b2f82a1a5"},"title":"BNMO Website","description":"BNMO website is created using <b>ReactJS with CI/CD</b>, <b>Spring Boot with Docker</b> and <b>CI/CD</b>, and <b>PostgreSQL</b>. This website is also created using <b>Authorization Bearer Token</b>, <b>API Caching</b>, <b>API Documentation (Swagger)</b>, and deployed on <b>Heroku</b>. This website consists of admin and customer roles. Customer can register, request balance additions, view profile and balance information, transfer balances to other customer, view the history of balance addition requests along with the status and verification time of the request, and view transaction history. Admin can verify customer, verify balance additions, and search for customer data.","image_path":"/projects/BNMO.png","link":"https://bnmo.herokuapp.com/","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"13"}},
    {"_id":{"$oid":"631a152fa2b7ef0b2f82a1a3"},"title":"IMPT Report Website","description":"IMPT Report website is created by PT Adaro Indonesia using <b>VueJS</b>, <b>Laravel</b>, and <b>PostgreSQL</b> to monitor the port area arriving and departing on a set schedule. As a Full Stack Engineer in Zinergo, I continued to build their website by adding 8 export excel features where the excel datas are taken from database to get important information from each port area. Some excel features generate charts and are automatically sent by email.","image_path":"/projects/IMPT_Report.png","link":"","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"12"}},
    {"_id":{"$oid":"631a14f8a2b7ef0b2f82a1a1"},"title":"MST-Based Clustering Website","description":"MST-Based Clustering website is created using <b>ReactJS with Typescript</b> and <b>Docker</b>, <b>Go with Docker</b> and <b>CI/CD</b>, and <b>MySQL</b>. MST-Based Clustering is one of the most widely used unsupervised algorithms in machine learning. If given a dataset with n random points, this algorithm will build a Minimum Spanning Tree (MST), then group the data by cutting the edge of the MST starting from the side with the largest weight. The number of edges that are cut determines the number of clusters to be created, for every n clusters there will be a maximum of n-1 edge cutting.","image_path":"/projects/MST-Based_Clustering.png","link":"https://github.com/TubesForLyfe/MST-Based-Clustering-UI","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"11"}},
    {"_id":{"$oid":"631a1483a2b7ef0b2f82a19f"},"title":"Buzzer Checker Website","description":"Buzzer Checker website is created using <b>VueJS</b> and <b>Flask</b> to check a twitter username is a buzzer account or not. The checking process begins by dividing the account into three-dimensional vector then the vector is compared with the vector of a buzzer account.","image_path":"/projects/Buzzer_Checker.png","link":"https://github.com/TubesForLyfe/Buzzer-Checker","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"10"}},
    {"_id":{"$oid":"631a142ea2b7ef0b2f82a19d"},"title":"NIM Finder Website","description":"NIM Finder website is created using <b>ReactJS</b> and <b>Progressive Web App (PWA)</b> to find Bandung Institute of Technology student identity by student ID number, department/major and year of className, and name.","image_path":"/projects/NIM_Finder.png","link":"https://nim-finder.netlify.app/","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"9"}},
    {"_id":{"$oid":"631a13e2a2b7ef0b2f82a19a"},"title":"DNA Website","description":"DNA website is created using <b>ReactJS</b>, <b>Go</b>, and <b>MySQL</b>. Users can add new diseases to the database. Users can also predict disease by inputting the patient's DNA and provide results with a certain percent match. Users can also search for disease prediction history.","image_path":"/projects/DNA.png","link":"https://tesdnanamanyamauapa.netlify.app/","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"8"}},
    {"_id":{"$oid":"6409acd6978163a29376acf8"},"title":"Aether Wars Game (Desktop)","description":"Aether Wars application is created using <b>JavaFX</b> that consists of 2 players with a maximum of 5 cards in each hand. This game consists of 4 phases, namely Draw, Plan, Attack, and End. In Draw, players can get new cards in hand. In Plan, players can add cards to attack or discard cards. In attacking, players attack other players according to their turn.","image_path":"/projects/Aether_Wars.png","link":"https://github.com/TubesForLyfe/Tugas-Besar-OOP-2","sequence":{"$numberInt":"7"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"631a0dbfa2b7ef0b2f82a196"},"title":"Ibu Canggih Website","description":"Ibu Canggih website is created using <b>ReactJS</b>, <b>ExpressJS</b>, and <b>MySQL</b>. Users can edit profiles and add reward points on the page provided by filling in the required data. This website can display the total points that have been earned by the user and details of each valid and invalid reward point. The website also has admin features that can manage users, whatsapp groups, events, articles, and banners.","image_path":"/projects/Ibu_Canggih.png","link":"https://ibu2canggih.id/","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"6"}},
    {"_id":{"$oid":"6409ae19978163a29376acfd"},"title":"15-Puzzle (Desktop)","description":"15-Puzzle application is created using <b>Java Swing</b> to solve the 15-Puzzle by implementing the Branch and Bound Algorithm in the IF2211 Algorithm Strategy course. The program will read the file containing the initial puzzle arrangement, then the program will process the puzzle until a solution puzzle is found. This program is based on CLI (Command Line Interface) and GUI (Graphical User Interface).","image_path":"/projects/15-Puzzle.png","link":"https://github.com/TubesForLyfe/Tugas-Kecil-3-Strategi-Algoritma","sequence":{"$numberInt":"5"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"6409aebd978163a29376ad00"},"title":"Folder Crawling (Desktop)","description":"Folder Crawling application is created using <b>C#</b> language (<b>.NET</b>) that can model the features of the file explorer on the operating system. By utilizing the Breadth First Search (BFS) and Depth First Search (DFS) algorithms, users can browse the folders in the directory to find the directory that the user wants. The application can also visualize the results of searching the folder in the form of a tree.","image_path":"/projects/Folder_Crawling.png","link":"https://github.com/TubesForLyfe/Tubes2_13520128","sequence":{"$numberInt":"4"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"631a0d19a2b7ef0b2f82a193"},"title":"Vaccination Participant Prediction Website","description":"Vaccination Participant Prediction website is created using <b>Shiny</b> script in <b>R</b> language to make predictions about vaccination participants using Markov Average-based Weighted Fuzzy Time Series model.","image_path":"/projects/Vaccination_Prediction.png","link":"https://github.com/TubesForLyfe/Prediksi-Peserta-Vaksinasi","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"3"}},
    {"_id":{"$oid":"6409af9a978163a29376ad04"},"title":"SPE ITB SC Website","description":"SPE ITB SC website is created using <b>Wordpress</b> CMS that consists of 6 pages, namely Home, About Us, Event, Achievement, Membership, and Register page that embeds the Google registration form. ","image_path":"/projects/SPE_ITB_SC.png","link":"https://speitssc.org","sequence":{"$numberInt":"2"},"__v":{"$numberInt":"0"}},
    {"_id":{"$oid":"631a0caea2b7ef0b2f82a190"},"title":"Image Compressor Website","description":"Image Compressor website is created using <b>Flask</b> to compress selected images with the desired compression percentage.","image_path":"/projects/Image_Compressor.png","link":"https://github.com/TubesForLyfe/Algeo02-20137","__v":{"$numberInt":"0"},"sequence":{"$numberInt":"1"}}
];